loading annotations into memory...
Done (t=0.01s)
creating index...
index created!
Traceback (most recent call last):
  File "parallel_inference.py", line 14, in <module>
    class Config(object):
  File "parallel_inference.py", line 35, in Config
    model = init_detector(config_file, checkpoint_file, device=device)
  File "/home/lifeng/undone-work/DetCompetition/mmdet-v2/mmdet/apis/inference.py", line 41, in init_detector
    checkpoint = load_checkpoint(model, checkpoint, map_location=map_loc)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/mmcv/runner/checkpoint.py", line 279, in load_checkpoint
    checkpoint = _load_checkpoint(filename, map_location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/mmcv/runner/checkpoint.py", line 255, in _load_checkpoint
    checkpoint = torch.load(filename, map_location=map_location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 584, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 842, in _load
    result = unpickler.load()
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 834, in persistent_load
    load_tensor(data_type, size, key, _maybe_decode_ascii(location))
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 823, in load_tensor
    loaded_storages[key] = restore_location(storage, location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 174, in default_restore_location
    result = fn(storage, location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 150, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 140, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on CUDA device '
RuntimeError: Attempting to deserialize object on CUDA device 1 but torch.cuda.device_count() is 1. Please use torch.load with map_location to map your storages to an existing device.
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
loading annotations into memory...
Done (t=0.01s)
creating index...
index created!
Traceback (most recent call last):
  File "parallel_inference.py", line 14, in <module>
    class Config(object):
  File "parallel_inference.py", line 35, in Config
    model = init_detector(config_file, checkpoint_file, device=device)
  File "/home/lifeng/undone-work/DetCompetition/mmdet-v2/mmdet/apis/inference.py", line 41, in init_detector
    checkpoint = load_checkpoint(model, checkpoint, map_location=map_loc)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/mmcv/runner/checkpoint.py", line 279, in load_checkpoint
    checkpoint = _load_checkpoint(filename, map_location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/mmcv/runner/checkpoint.py", line 255, in _load_checkpoint
    checkpoint = torch.load(filename, map_location=map_location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 584, in load
    return _load(opened_zipfile, map_location, pickle_module, **pickle_load_args)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 842, in _load
    result = unpickler.load()
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 834, in persistent_load
    load_tensor(data_type, size, key, _maybe_decode_ascii(location))
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 823, in load_tensor
    loaded_storages[key] = restore_location(storage, location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 174, in default_restore_location
    result = fn(storage, location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 150, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/home/lifeng/anaconda3/envs/detcomp/lib/python3.8/site-packages/torch/serialization.py", line 134, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
